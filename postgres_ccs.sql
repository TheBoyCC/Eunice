/*
PostgreSQL Backup
Database: CCS_DB_UAT/public
Backup Time: 2021-06-02 14:49:39
*/

DROP SEQUENCE IF EXISTS "public"."Actions_ActionID_seq";
DROP SEQUENCE IF EXISTS "public"."ActivityLogs_ActivityLogID_seq";
DROP SEQUENCE IF EXISTS "public"."BrainsReports_ReportID_seq";
DROP SEQUENCE IF EXISTS "public"."Currencies_CurrencyID_seq";
DROP SEQUENCE IF EXISTS "public"."Customers_CustomerID_seq";
DROP SEQUENCE IF EXISTS "public"."DailyExcess_ExcessID_seq";
DROP SEQUENCE IF EXISTS "public"."Departments_DeptID_seq";
DROP SEQUENCE IF EXISTS "public"."NewCustomers_NewCustomerID_seq";
DROP SEQUENCE IF EXISTS "public"."Roles_RoleID_seq";
DROP SEQUENCE IF EXISTS "public"."Tasks_TaskID_seq";
DROP TABLE IF EXISTS "public"."AccountTypes";
DROP TABLE IF EXISTS "public"."Accounts";
DROP TABLE IF EXISTS "public"."Actions";
DROP TABLE IF EXISTS "public"."ActivityLogs";
DROP TABLE IF EXISTS "public"."BrainsReports";
DROP TABLE IF EXISTS "public"."Branches";
DROP TABLE IF EXISTS "public"."Currencies";
DROP TABLE IF EXISTS "public"."Customers";
DROP TABLE IF EXISTS "public"."DailyExcess";
DROP TABLE IF EXISTS "public"."Departments";
DROP TABLE IF EXISTS "public"."MarketSegments";
DROP TABLE IF EXISTS "public"."NewCustomers";
DROP TABLE IF EXISTS "public"."Roles";
DROP TABLE IF EXISTS "public"."Tasks";
DROP TABLE IF EXISTS "public"."Users";
DROP FUNCTION IF EXISTS "public"."update_task_action()";
CREATE SEQUENCE "Actions_ActionID_seq" 
INCREMENT 1
MINVALUE  1
MAXVALUE 2147483647
START 1
CACHE 1;
CREATE SEQUENCE "ActivityLogs_ActivityLogID_seq" 
INCREMENT 1
MINVALUE  1
MAXVALUE 2147483647
START 1
CACHE 1;
CREATE SEQUENCE "BrainsReports_ReportID_seq" 
INCREMENT 1
MINVALUE  1
MAXVALUE 2147483647
START 1
CACHE 1;
CREATE SEQUENCE "Currencies_CurrencyID_seq" 
INCREMENT 1
MINVALUE  1
MAXVALUE 2147483647
START 1
CACHE 1;
CREATE SEQUENCE "Customers_CustomerID_seq" 
INCREMENT 1
MINVALUE  1
MAXVALUE 2147483647
START 1
CACHE 1;
CREATE SEQUENCE "DailyExcess_ExcessID_seq" 
INCREMENT 1
MINVALUE  1
MAXVALUE 2147483647
START 1
CACHE 1;
CREATE SEQUENCE "Departments_DeptID_seq" 
INCREMENT 1
MINVALUE  1
MAXVALUE 2147483647
START 1
CACHE 1;
CREATE SEQUENCE "NewCustomers_NewCustomerID_seq" 
INCREMENT 1
MINVALUE  1
MAXVALUE 2147483647
START 1
CACHE 1;
CREATE SEQUENCE "Roles_RoleID_seq" 
INCREMENT 1
MINVALUE  1
MAXVALUE 2147483647
START 1
CACHE 1;
CREATE SEQUENCE "Tasks_TaskID_seq" 
INCREMENT 1
MINVALUE  1
MAXVALUE 2147483647
START 1
CACHE 1;
CREATE TABLE "AccountTypes" (
  "AccountType" int4 NOT NULL,
  "TypeName" text COLLATE "pg_catalog"."default" NOT NULL,
  "TypeStatus" bool NOT NULL DEFAULT true,
  "DateModified" timestamp(6) NOT NULL DEFAULT now()
)
;
ALTER TABLE "AccountTypes" OWNER TO "postgres";
CREATE TABLE "Accounts" (
  "ReferCode" text COLLATE "pg_catalog"."default",
  "MarketSegment" int4,
  "EWL" int4,
  "DateOpened" timestamp(6),
  "DateClosed" timestamp(6),
  "CustomerID" int4 NOT NULL,
  "Currency" text COLLATE "pg_catalog"."default",
  "Code" int4,
  "BranchCode" int4 NOT NULL,
  "BranchAccount" text COLLATE "pg_catalog"."default",
  "AccountType" int4,
  "AccountStatus" bool,
  "AccountNumber" text COLLATE "pg_catalog"."default" NOT NULL,
  "DateModified" timestamp(6) DEFAULT now()
)
;
ALTER TABLE "Accounts" OWNER TO "postgres";
CREATE TABLE "Actions" (
  "ActionID" int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "ActionName" text COLLATE "pg_catalog"."default" NOT NULL,
  "ActionStatus" bool NOT NULL DEFAULT true,
  "DateModified" timestamp(6) NOT NULL DEFAULT now()
)
;
ALTER TABLE "Actions" OWNER TO "postgres";
CREATE TABLE "ActivityLogs" (
  "ActivityLogID" int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "ActivityDate" timestamp(6) NOT NULL,
  "Username" text COLLATE "pg_catalog"."default" NOT NULL,
  "Activity" text COLLATE "pg_catalog"."default" NOT NULL,
  "Description" text COLLATE "pg_catalog"."default" NOT NULL
)
;
ALTER TABLE "ActivityLogs" OWNER TO "postgres";
CREATE TABLE "BrainsReports" (
  "ReportID" int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "Username" text COLLATE "pg_catalog"."default" NOT NULL,
  "DateUploaded" timestamp(6) NOT NULL DEFAULT now(),
  "ReportStatus" bool DEFAULT true
)
;
ALTER TABLE "BrainsReports" OWNER TO "postgres";
CREATE TABLE "Branches" (
  "BranchCode" int4 NOT NULL,
  "LongName" text COLLATE "pg_catalog"."default" NOT NULL,
  "ShortName" text COLLATE "pg_catalog"."default" NOT NULL,
  "BranchStatus" bool NOT NULL DEFAULT true,
  "DateModified" timestamp(6) NOT NULL DEFAULT now()
)
;
ALTER TABLE "Branches" OWNER TO "postgres";
CREATE TABLE "Currencies" (
  "CurrencyID" int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "LongName" text COLLATE "pg_catalog"."default" NOT NULL,
  "ShortName" text COLLATE "pg_catalog"."default" NOT NULL,
  "DateModified" timestamp(6) NOT NULL DEFAULT now()
)
;
ALTER TABLE "Currencies" OWNER TO "postgres";
CREATE TABLE "Customers" (
  "CustomerID" int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "BranchAccount" text COLLATE "pg_catalog"."default",
  "ShortName" text COLLATE "pg_catalog"."default" NOT NULL,
  "LongName" text COLLATE "pg_catalog"."default" NOT NULL,
  "Gender" text COLLATE "pg_catalog"."default",
  "MaritalStatus" text COLLATE "pg_catalog"."default",
  "DateOfBirth" timestamp(6),
  "PhoneNumber1" text COLLATE "pg_catalog"."default",
  "PhoneNumber2" text COLLATE "pg_catalog"."default",
  "Email" text COLLATE "pg_catalog"."default",
  "IDNumber" text COLLATE "pg_catalog"."default",
  "Employer" text COLLATE "pg_catalog"."default",
  "Occupation" text COLLATE "pg_catalog"."default",
  "Country" text COLLATE "pg_catalog"."default",
  "PlaceOfBirth" text COLLATE "pg_catalog"."default",
  "ResidentialAddress" text COLLATE "pg_catalog"."default",
  "PostalAddress" text COLLATE "pg_catalog"."default",
  "Town" text COLLATE "pg_catalog"."default",
  "ZipCode" text COLLATE "pg_catalog"."default",
  "OtherInformation" text COLLATE "pg_catalog"."default",
  "CustomerStatus" bool NOT NULL DEFAULT true,
  "Migrated" bool DEFAULT false,
  "DateModified" timestamp(6) NOT NULL DEFAULT now()
)
;
ALTER TABLE "Customers" OWNER TO "postgres";
CREATE TABLE "DailyExcess" (
  "ExcessID" int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "Initials" text COLLATE "pg_catalog"."default",
  "Username" text COLLATE "pg_catalog"."default",
  "BranchCode" text COLLATE "pg_catalog"."default",
  "AccountNumber" text COLLATE "pg_catalog"."default",
  "AccountType" int4,
  "CustomerName" text COLLATE "pg_catalog"."default",
  "LocalBalance" money,
  "CurrencyBalance" money,
  "PaidDate" timestamp(6),
  "TransCode" text COLLATE "pg_catalog"."default",
  "CurrecnyNum" text COLLATE "pg_catalog"."default",
  "LocalAmount" text COLLATE "pg_catalog"."default",
  "CurrencyAmount" text COLLATE "pg_catalog"."default",
  "MarketSegment" text COLLATE "pg_catalog"."default",
  "Unit" text COLLATE "pg_catalog"."default",
  "ReferCode" text COLLATE "pg_catalog"."default",
  "OriginatingBranch" int4,
  "Narration" text COLLATE "pg_catalog"."default",
  "TerminalNumber" int4,
  "TerminalSequence" int4,
  "Comment" text COLLATE "pg_catalog"."default",
  "ExcessStatus" bool NOT NULL DEFAULT false,
  "ReportDate" timestamp(6),
  "Reviewed" bool NOT NULL DEFAULT false,
  "DateModified" timestamp(6) NOT NULL DEFAULT now()
)
;
ALTER TABLE "DailyExcess" OWNER TO "postgres";
CREATE TABLE "Departments" (
  "DeptID" int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "DeptName" text COLLATE "pg_catalog"."default" NOT NULL,
  "DateModified" timestamp(6) NOT NULL DEFAULT now()
)
;
ALTER TABLE "Departments" OWNER TO "postgres";
CREATE TABLE "MarketSegments" (
  "Segment" int4 NOT NULL,
  "SegmentName" text COLLATE "pg_catalog"."default" NOT NULL,
  "DateModified" timestamp(6) NOT NULL DEFAULT now()
)
;
ALTER TABLE "MarketSegments" OWNER TO "postgres";
CREATE TABLE "NewCustomers" (
  "NewCustomerID" int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "DateCreated" timestamp(6) NOT NULL,
  "CustomerID" int4 NOT NULL,
  "FirstName" text COLLATE "pg_catalog"."default" NOT NULL,
  "LastName" text COLLATE "pg_catalog"."default" NOT NULL,
  "BranchCode" int4 NOT NULL,
  "AccountNumber" text COLLATE "pg_catalog"."default",
  "Controller" text COLLATE "pg_catalog"."default",
  "Authoriser" text COLLATE "pg_catalog"."default",
  "Authorised" bool NOT NULL DEFAULT false,
  "Comments" text COLLATE "pg_catalog"."default",
  "NewCustomerStatus" text COLLATE "pg_catalog"."default",
  "DateModified" timestamp(6)
)
;
ALTER TABLE "NewCustomers" OWNER TO "postgres";
CREATE TABLE "Roles" (
  "RoleID" int4 NOT NULL GENERATED ALWAYS AS IDENTITY,
  "RoleName" text COLLATE "pg_catalog"."default" NOT NULL,
  "DateModified" timestamp(6) DEFAULT now()
)
;
ALTER TABLE "Roles" OWNER TO "postgres";
CREATE TABLE "Tasks" (
  "TaskID" int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "ActionID" int4 NOT NULL,
  "CustomerID" int4 NOT NULL,
  "CurrencyID" int4,
  "DebitBalance" money,
  "DebitIR" text COLLATE "pg_catalog"."default",
  "ChequeNumber" text COLLATE "pg_catalog"."default",
  "Amount" money,
  "Reason" text COLLATE "pg_catalog"."default",
  "Notes" text COLLATE "pg_catalog"."default",
  "ApplicableDate" timestamp(6),
  "DueDate" timestamp(6),
  "TaskStatus" text COLLATE "pg_catalog"."default" NOT NULL,
  "Controller" text COLLATE "pg_catalog"."default" NOT NULL,
  "Completor" text COLLATE "pg_catalog"."default",
  "DateCompleted" timestamp(6),
  "Archived" bool NOT NULL DEFAULT false,
  "DateModified" timestamp(6) NOT NULL DEFAULT now()
)
;
ALTER TABLE "Tasks" OWNER TO "postgres";
CREATE TABLE "Users" (
  "Username" text COLLATE "pg_catalog"."default" NOT NULL,
  "FirstName" text COLLATE "pg_catalog"."default" NOT NULL,
  "LastName" text COLLATE "pg_catalog"."default" NOT NULL,
  "Email" text COLLATE "pg_catalog"."default",
  "RoleName" text COLLATE "pg_catalog"."default" NOT NULL,
  "DeptID" int4 NOT NULL,
  "Locked" bool DEFAULT false,
  "UserStatus" bool DEFAULT true,
  "Signature" bytea[],
  "LoginAttempt" int4 DEFAULT 0,
  "DateModified" timestamp(6) DEFAULT now()
)
;
ALTER TABLE "Users" OWNER TO "postgres";
CREATE OR REPLACE FUNCTION "update_task_action"()
  RETURNS "pg_catalog"."trigger" AS $BODY$
DECLARE
	ActionName text;
BEGIN
	SELECT "ActionName" FROM public."Actions" WHERE "ActionID" = NEW.ActionID;

	IF (ActionName = 'Unpay Cheque') THEN
		UPDATE public."Tasks" SET "DebitBalance" = NEW.Amount, "Notes" = NEW.ChequeNumber + ' - ' + NEW.Reason
		WHERE TaskID = NEW.TaskID;

	ELSEIF (ActionName = 'Telephone') THEN
		UPDATE public."Tasks" SET "Notes" = NEW.Reason
		WHERE TaskID = NEW.TaskID;	
	END IF;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION "update_task_action"() OWNER TO "postgres";
BEGIN;
LOCK TABLE "public"."AccountTypes" IN SHARE MODE;
DELETE FROM "public"."AccountTypes";
COMMIT;
BEGIN;
LOCK TABLE "public"."Accounts" IN SHARE MODE;
DELETE FROM "public"."Accounts";
COMMIT;
BEGIN;
LOCK TABLE "public"."Actions" IN SHARE MODE;
DELETE FROM "public"."Actions";
COMMIT;
BEGIN;
LOCK TABLE "public"."ActivityLogs" IN SHARE MODE;
DELETE FROM "public"."ActivityLogs";
INSERT INTO "public"."ActivityLogs" ("ActivityLogID","ActivityDate","Username","Activity","Description") VALUES (1, '2021-06-01 12:12:46.679049', 'ABCO252', 'Login', 'Login Successful'),(2, '2021-06-01 12:21:25.580157', 'ABCO252', 'Login', 'Login Successful'),(3, '2021-06-01 12:21:42.681162', 'ABCO252', 'Login', 'Login Successful');
COMMIT;
BEGIN;
LOCK TABLE "public"."BrainsReports" IN SHARE MODE;
DELETE FROM "public"."BrainsReports";
COMMIT;
BEGIN;
LOCK TABLE "public"."Branches" IN SHARE MODE;
DELETE FROM "public"."Branches";
COMMIT;
BEGIN;
LOCK TABLE "public"."Currencies" IN SHARE MODE;
DELETE FROM "public"."Currencies";
COMMIT;
BEGIN;
LOCK TABLE "public"."Customers" IN SHARE MODE;
DELETE FROM "public"."Customers";
COMMIT;
BEGIN;
LOCK TABLE "public"."DailyExcess" IN SHARE MODE;
DELETE FROM "public"."DailyExcess";
COMMIT;
BEGIN;
LOCK TABLE "public"."Departments" IN SHARE MODE;
DELETE FROM "public"."Departments";
INSERT INTO "public"."Departments" ("DeptID","DeptName","DateModified") VALUES (1, 'Technology', '2021-06-01 12:00:42.092817'),(2, 'Monitoring & Control', '2021-06-01 12:00:42.092817');
COMMIT;
BEGIN;
LOCK TABLE "public"."MarketSegments" IN SHARE MODE;
DELETE FROM "public"."MarketSegments";
COMMIT;
BEGIN;
LOCK TABLE "public"."NewCustomers" IN SHARE MODE;
DELETE FROM "public"."NewCustomers";
COMMIT;
BEGIN;
LOCK TABLE "public"."Roles" IN SHARE MODE;
DELETE FROM "public"."Roles";
INSERT INTO "public"."Roles" ("RoleID","RoleName","DateModified") VALUES (1, 'Administrator', '2021-06-01 11:59:54.747819'),(2, 'Manager', '2021-06-01 11:59:54.747819'),(3, 'Controller', '2021-06-01 11:59:54.747819'),(4, 'Supervisor', '2021-06-01 11:59:54.747819');
COMMIT;
BEGIN;
LOCK TABLE "public"."Tasks" IN SHARE MODE;
DELETE FROM "public"."Tasks";
COMMIT;
BEGIN;
LOCK TABLE "public"."Users" IN SHARE MODE;
DELETE FROM "public"."Users";
INSERT INTO "public"."Users" ("Username","FirstName","LastName","Email","RoleName","DeptID","Locked","UserStatus","Signature","LoginAttempt","DateModified") VALUES ('ABCO252', 'Christian', 'Ofori-Achiaw', 'christian.ofori-achiaw@absa.africa', 'Administrator', 1, 'f', 't', NULL, 0, '2021-06-01 12:02:13.045001');
COMMIT;
ALTER TABLE "AccountTypes" ADD CONSTRAINT "AccountTypes_pkey" PRIMARY KEY ("AccountType");
ALTER TABLE "Accounts" ADD CONSTRAINT "Accounts_pkey" PRIMARY KEY ("CustomerID", "BranchCode", "AccountNumber");
ALTER TABLE "Actions" ADD CONSTRAINT "Actions_pkey" PRIMARY KEY ("ActionID");
ALTER TABLE "ActivityLogs" ADD CONSTRAINT "ActivityLogs_pkey" PRIMARY KEY ("ActivityLogID");
ALTER TABLE "BrainsReports" ADD CONSTRAINT "BrainsReports_pkey" PRIMARY KEY ("ReportID");
ALTER TABLE "Branches" ADD CONSTRAINT "Branches_pkey" PRIMARY KEY ("BranchCode");
ALTER TABLE "Currencies" ADD CONSTRAINT "Currencies_pkey" PRIMARY KEY ("CurrencyID");
ALTER TABLE "Customers" ADD CONSTRAINT "Customers_pkey" PRIMARY KEY ("CustomerID");
ALTER TABLE "DailyExcess" ADD CONSTRAINT "DailyExcess_pkey" PRIMARY KEY ("ExcessID");
ALTER TABLE "Departments" ADD CONSTRAINT "Departments_pkey" PRIMARY KEY ("DeptID");
ALTER TABLE "MarketSegments" ADD CONSTRAINT "MarketSegments_pkey" PRIMARY KEY ("Segment");
ALTER TABLE "NewCustomers" ADD CONSTRAINT "NewCustomers_pkey" PRIMARY KEY ("NewCustomerID");
ALTER TABLE "Roles" ADD CONSTRAINT "Roles_pkey" PRIMARY KEY ("RoleName");
ALTER TABLE "Tasks" ADD CONSTRAINT "Tasks_pkey" PRIMARY KEY ("TaskID");
ALTER TABLE "Users" ADD CONSTRAINT "Users_pkey" PRIMARY KEY ("Username");
ALTER TABLE "Accounts" ADD CONSTRAINT "Accounts_AccountType_fkey" FOREIGN KEY ("AccountType") REFERENCES "public"."AccountTypes" ("AccountType") ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE "Accounts" ADD CONSTRAINT "Accounts_BranchCode_fkey" FOREIGN KEY ("BranchCode") REFERENCES "public"."Branches" ("BranchCode") ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE "Accounts" ADD CONSTRAINT "Accounts_CustomerID_fkey" FOREIGN KEY ("CustomerID") REFERENCES "public"."Customers" ("CustomerID") ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE "Accounts" ADD CONSTRAINT "Accounts_MarketSegment_fkey" FOREIGN KEY ("MarketSegment") REFERENCES "public"."MarketSegments" ("Segment") ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE "ActivityLogs" ADD CONSTRAINT "FK_Users_ActivityLogs_Username" FOREIGN KEY ("Username") REFERENCES "public"."Users" ("Username") ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE "BrainsReports" ADD CONSTRAINT "BrainsReports_Username_fkey" FOREIGN KEY ("Username") REFERENCES "public"."Users" ("Username") ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE "NewCustomers" ADD CONSTRAINT "NewCustomers_Authoriser_fkey" FOREIGN KEY ("Authoriser") REFERENCES "public"."Users" ("Username") ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE "NewCustomers" ADD CONSTRAINT "NewCustomers_BranchCode_fkey" FOREIGN KEY ("BranchCode") REFERENCES "public"."Branches" ("BranchCode") ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE "NewCustomers" ADD CONSTRAINT "NewCustomers_Controller_fkey" FOREIGN KEY ("Controller") REFERENCES "public"."Users" ("Username") ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE "NewCustomers" ADD CONSTRAINT "NewCustomers_CustomerID_fkey" FOREIGN KEY ("CustomerID") REFERENCES "public"."Customers" ("CustomerID") ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE "Tasks" ADD CONSTRAINT "Tasks_ActionID_fkey" FOREIGN KEY ("ActionID") REFERENCES "public"."Actions" ("ActionID") ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE "Tasks" ADD CONSTRAINT "Tasks_Completor_fkey" FOREIGN KEY ("Completor") REFERENCES "public"."Users" ("Username") ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE "Tasks" ADD CONSTRAINT "Tasks_Controller_fkey" FOREIGN KEY ("Controller") REFERENCES "public"."Users" ("Username") ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE "Tasks" ADD CONSTRAINT "Tasks_CurrencyID_fkey" FOREIGN KEY ("CurrencyID") REFERENCES "public"."Currencies" ("CurrencyID") ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE "Tasks" ADD CONSTRAINT "Tasks_CustomerID_fkey" FOREIGN KEY ("CustomerID") REFERENCES "public"."Customers" ("CustomerID") ON DELETE NO ACTION ON UPDATE NO ACTION;
CREATE TRIGGER "update_task_action" AFTER INSERT ON "Tasks"
FOR EACH ROW
EXECUTE PROCEDURE "public"."update_task_action"();
ALTER TABLE "Users" ADD CONSTRAINT "FK_Users_Departments_DeptID" FOREIGN KEY ("DeptID") REFERENCES "public"."Departments" ("DeptID") ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE "Users" ADD CONSTRAINT "FK_Users_Roles_RoleName" FOREIGN KEY ("RoleName") REFERENCES "public"."Roles" ("RoleName") ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER SEQUENCE "Actions_ActionID_seq"
OWNED BY "Actions"."ActionID";
SELECT setval('"Actions_ActionID_seq"', 2, false);
ALTER SEQUENCE "Actions_ActionID_seq" OWNER TO "postgres";
ALTER SEQUENCE "ActivityLogs_ActivityLogID_seq"
OWNED BY "ActivityLogs"."ActivityLogID";
SELECT setval('"ActivityLogs_ActivityLogID_seq"', 4, true);
ALTER SEQUENCE "ActivityLogs_ActivityLogID_seq" OWNER TO "postgres";
ALTER SEQUENCE "BrainsReports_ReportID_seq"
OWNED BY "BrainsReports"."ReportID";
SELECT setval('"BrainsReports_ReportID_seq"', 2, false);
ALTER SEQUENCE "BrainsReports_ReportID_seq" OWNER TO "postgres";
ALTER SEQUENCE "Currencies_CurrencyID_seq"
OWNED BY "Currencies"."CurrencyID";
SELECT setval('"Currencies_CurrencyID_seq"', 2, false);
ALTER SEQUENCE "Currencies_CurrencyID_seq" OWNER TO "postgres";
ALTER SEQUENCE "Customers_CustomerID_seq"
OWNED BY "Customers"."CustomerID";
SELECT setval('"Customers_CustomerID_seq"', 2, false);
ALTER SEQUENCE "Customers_CustomerID_seq" OWNER TO "postgres";
ALTER SEQUENCE "DailyExcess_ExcessID_seq"
OWNED BY "DailyExcess"."ExcessID";
SELECT setval('"DailyExcess_ExcessID_seq"', 2, false);
ALTER SEQUENCE "DailyExcess_ExcessID_seq" OWNER TO "postgres";
ALTER SEQUENCE "Departments_DeptID_seq"
OWNED BY "Departments"."DeptID";
SELECT setval('"Departments_DeptID_seq"', 3, true);
ALTER SEQUENCE "Departments_DeptID_seq" OWNER TO "postgres";
ALTER SEQUENCE "NewCustomers_NewCustomerID_seq"
OWNED BY "NewCustomers"."NewCustomerID";
SELECT setval('"NewCustomers_NewCustomerID_seq"', 2, false);
ALTER SEQUENCE "NewCustomers_NewCustomerID_seq" OWNER TO "postgres";
ALTER SEQUENCE "Roles_RoleID_seq"
OWNED BY "Roles"."RoleID";
SELECT setval('"Roles_RoleID_seq"', 5, true);
ALTER SEQUENCE "Roles_RoleID_seq" OWNER TO "postgres";
ALTER SEQUENCE "Tasks_TaskID_seq"
OWNED BY "Tasks"."TaskID";
SELECT setval('"Tasks_TaskID_seq"', 2, false);
ALTER SEQUENCE "Tasks_TaskID_seq" OWNER TO "postgres";
